##
# sokol-sandbox-c
#
# @file
# @version 0.1

CFLAGS := -std=c2x -Wall -Wextra -pthread
LDFLAGS := -lGL -ldl -lm -lX11 -lasound -lXi -lXcursor

TARGET_EXEC := sandbox
BUILD_DIR := out
SRC_DIR := src

SRCS := $(shell find $(SRC_DIR) -name '*.c')

# GENERATED CODE ======================================================

# Find all the GLSL files we want to compile
SHADER_SRCS := $(shell find $(SRC_DIR) -name '*.glsl')
SHADER_GENS := $(SHADER_SRCS:.glsl=.glsl.h)

# Build step for shaders
%.glsl.h: %.glsl
	sokol-shdc -i $< -l "glsl430" -o $@

# EXECUTABLE =========================================================

# Find all the C files we want to compile
OBJS := $(SRCS:$(SRC_DIR)/%.c=$(BUILD_DIR)/%.o)
# Dependency files (automatically generated by -MMD)
DEPS := $(OBJS:.o=.d)

# Build step for the executable
$(TARGET_EXEC): $(OBJS)
	$(CC) $(OBJS) -o $@ $(LDFLAGS)

# Build step for C source
CPPFLAGS := $(INC_FLAGS) -MMD -MP # generate .d files for dependencies

$(BUILD_DIR)/%.o: $(SRC_DIR)/%.c | shaders
	mkdir -p $(dir $@)
	$(CC) $(CPPFLAGS) $(CFLAGS) -c $< -o $@

# PHONY TARGETS =======================================================

.PHONY: all shaders clean

all: $(BUILD_DIR)/$(TARGET_EXEC)
shaders: $(SHADER_GENS)
clean:
	rm -rf $(BUILD_DIR)
	rm -f $(shell find $(SRC_DIR) -name '*.glsl.h')
	rm -f $(TARGET_EXEC)

# Include the .d makefiles. The - at the front suppresses the errors of
# missing Makefiles. Initially, all the .d files will be missing, and we
# don't want those errors to show up.
-include $(DEPS)
